import pandas as pd
from matplotlib import pyplot as plt
import random as random

#________________________________________________________________________________________
# Name: George Shea     ÃŸeta
# Date Created: 9/9/21
# Date Modified 9/9/21
# project part 2 this project is parsing through an excel spreadsheet to produce usable data
# Version 1.0
#
#
#________________________________________________________________________________________

path = pd.ExcelFile('C:/Users/gshea/Desktop/School/Summer2021/Artifical/DataSets/project_1_part_2.xlsx')
dataFramePrime = pd.read_excel(path)

ipList = dataFramePrime['User IP'].values.tolist()  #
launageList = dataFramePrime['What Language Do You Speak?'].values.tolist()  #
# tells me which ones are unique ips

def UniversalSort(searchList, probE = None):
    uniqueSearch = []
    counter = 0
    for x in searchList:
        tag = searchList[counter]
        # Check for if there is a new vegi
        if (not (str(tag) in uniqueSearch)):
            uniqueSearch.append(str(tag))
        counter = counter + 1


    dfStorage = []
    # each list within organized holder is a unique value based on organzaiton cretiria
    counter = 0
    counterTwo = 0
    for x in uniqueSearch:
        dfTemp = pd.DataFrame(columns = dataFramePrime.columns.values.tolist())
        #columns
        counter = 0
        for y in searchList:
            # goes through entire list to sort into 1/n unique ips
            if(searchList[counter] == uniqueSearch[counterTwo]):
                #Magic Syntax https://www.geeksforgeeks.org/how-to-add-one-row-in-an-existing-pandas-dataframe/
                dfTemp.loc[len(dfTemp.index)] = dataFramePrime.iloc[counter]
            # goes through entire data set
            counter = counter + 1

        # goes through unique ip test to match
        counterTwo = counterTwo + 1

        dfStorage.append(dfTemp)

    def ProblemE():
        spam = input("Would you like to print will be a bit messy y/n\n")
        counter = 0
        if spam == "y":

            for x in dfStorage:
                print(uniqueSearch[counter], "  Total: ", len(dfStorage[counter]))
                totalLen = len(dfStorage[counter])
                #print(numb - dfStorage[0].isnull().sum(axis=0))

                output = dfStorage[counter].iloc[:, 1:33].notnull().sum(axis=0)
                percent = ((dfStorage[counter].iloc[:, 1:33].notnull().sum(axis=0)) / totalLen) * 100

                percent = percent.sort_values(ascending=True)
                output = output.sort_values(ascending=True)
                percent = round(percent)
                #print((round(percent)))

                horizontal_stack = pd.concat([output, percent], axis=1)

                print(str(horizontal_stack).replace("                    ", "________________________________________________________________________________________________________________________________________________________________________________________________"))

                counter = counter + 1
        else:
            print("Ok.")

    if (probE == True):
        ProblemE()

def main():
    #UniversalSort(ipList, probE=True)
    UniversalSort(launageList, probE=True)

main()
